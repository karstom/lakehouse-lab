# =============================================================================
# .env.fat-server - Configuration for high-resource servers
# Example: 32-core Xeon with 220GB RAM
# =============================================================================

# Root directory for all data and configurations
LAKEHOUSE_ROOT=./lakehouse-data

# Set profile to enable fat-server optimizations
LAKEHOUSE_PROFILE=fat-server

# =============================================================================
# FAT SERVER CONFIGURATION (32+ cores, 64GB+ RAM)
# =============================================================================

# Postgres settings - optimized for heavy workloads
POSTGRES_MEMORY_LIMIT=8G
POSTGRES_MEMORY_RESERVATION=2G
POSTGRES_SHARED_BUFFERS=2GB
POSTGRES_EFFECTIVE_CACHE_SIZE=8GB
POSTGRES_MAINTENANCE_WORK_MEM=1GB
POSTGRES_CHECKPOINT_COMPLETION_TARGET=0.9
POSTGRES_WAL_BUFFERS=64MB
POSTGRES_DEFAULT_STATISTICS_TARGET=500

# MinIO settings - handle high throughput
MINIO_MEMORY_LIMIT=16G
MINIO_MEMORY_RESERVATION=4G
MINIO_API_REQUESTS_MAX=50000
MINIO_API_REQUESTS_DEADLINE=30s

# MinIO initialization settings (fixes bucket creation issues)
MINIO_READY_TIMEOUT=30          # more attempts for fat servers (30 Ã— 3s = 90s total)
MINIO_READY_INTERVAL=3          # seconds between readiness checks
BUCKET_CREATE_RETRIES=10        # more retries for high-resource environments
SKIP_MINIO_READY_CHECK=false    # set to 'true' to skip readiness check (not recommended)

# Iceberg REST settings
ICEBERG_MEMORY_LIMIT=8G
ICEBERG_MEMORY_RESERVATION=2G

# Spark settings - utilize available cores and memory
SPARK_MASTER_MEMORY=4g
SPARK_MASTER_CORES=4
SPARK_MASTER_MEMORY_LIMIT=8G
SPARK_MASTER_MEMORY_RESERVATION=2G
SPARK_WORKER_MEMORY=32g
SPARK_WORKER_CORES=12
SPARK_WORKER_MEMORY_LIMIT=64G
SPARK_WORKER_CPU_LIMIT=16
SPARK_WORKER_MEMORY_RESERVATION=16G
SPARK_WORKER_CPU_RESERVATION=8
SPARK_WORKER_INSTANCES=2
SPARK_DAEMON_MEMORY=4g

# Jupyter settings - allow for large datasets in memory
JUPYTER_MEMORY_LIMIT=32G
JUPYTER_MEMORY_RESERVATION=8G
JUPYTER_SPARK_DRIVER_MEMORY=8g
JUPYTER_SPARK_EXECUTOR_MEMORY=16g
JUPYTER_SPARK_EXECUTOR_CORES=4

# Airflow settings - higher parallelism
AIRFLOW_EXECUTOR=LocalExecutor
AIRFLOW_WEBSERVER_WORKERS=8
AIRFLOW_WEBSERVER_MEMORY_LIMIT=8G
AIRFLOW_WEBSERVER_MEMORY_RESERVATION=2G
AIRFLOW_SCHEDULER_MEMORY_LIMIT=8G
AIRFLOW_SCHEDULER_MEMORY_RESERVATION=2G
AIRFLOW_PARALLELISM=128
AIRFLOW_MAX_ACTIVE_RUNS=32
AIRFLOW_MAX_ACTIVE_TASKS=64
AIRFLOW_SCHEDULER_THREADS=16

# Superset settings - handle multiple concurrent users
SUPERSET_MEMORY_LIMIT=16G
SUPERSET_MEMORY_RESERVATION=4G
SUPERSET_WORKERS=16
SUPERSET_TIMEOUT=120

# Superset settings - enhanced for fat server
SUPERSET_MEMORY_LIMIT=16G
SUPERSET_MEMORY_RESERVATION=4G
SUPERSET_WORKERS=16
SUPERSET_TIMEOUT=120

# Portainer monitoring settings
PORTAINER_MEMORY_LIMIT=1G
PORTAINER_MEMORY_RESERVATION=256M
