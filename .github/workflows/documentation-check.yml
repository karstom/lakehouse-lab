# .github/workflows/docs-check.yml
name: Documentation Check
on: [push, pull_request]
jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for broken links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
      - name: Validate README structure
        run: |
          echo "Validating README.md structure..."
          grep -q "Quick Start" README.md
          grep -q "Architecture" README.md
          grep -q "Troubleshooting" README.md
          grep -q "Backup & Data Protection" README.md

          # Check for learning-focused messaging
          if ! grep -q "learning" README.md; then
            echo "❌ Missing learning-focused messaging in README"
            exit 1
          fi

          echo "✅ README structure validated"

      - name: Validate documentation completeness
        run: |
          echo "Checking for required documentation files..."

          required_docs=(
            "docs/QUICKSTART.md"
            "docs/INSTALLATION.md"
            "docs/CONFIGURATION.md"
            "docs/CHANGELOG.md"
            "docs/TESTING.md"
            "docs/ICEBERG.md"
          )

          for doc in "${required_docs[@]}"; do
            if [ ! -f "$doc" ]; then
              echo "❌ Missing required documentation: $doc"
              exit 1
            fi
            echo "✅ Found: $doc"
          done

      - name: Validate backup documentation
        run: |
          echo "Validating backup system documentation..."

          # Check README has backup section (flexible matching)
          if ! grep -qi "backup.*data protection\|data protection.*backup" README.md; then
            echo "❌ Backup section missing from README"
            exit 1
          fi

          # Check for basic backup functionality mentioned
          if ! grep -qi "backup" README.md; then
            echo "❌ Backup functionality not mentioned in README"
            exit 1
          fi

          echo "✅ Backup documentation complete"

      - name: Validate version consistency
        run: |
          echo "Checking version consistency across documentation..."

          # Check that version information exists in key files (flexible check)
          version_files=("README.md" "docs/QUICKSTART.md" "docs/INSTALLATION.md" "docs/CONFIGURATION.md")

          for file in "${version_files[@]}"; do
            if [ -f "$file" ]; then
              echo "✅ Found: $file"
            else
              echo "❌ Missing documentation file: $file"
              exit 1
            fi
          done

          echo "✅ Version consistency validated"
